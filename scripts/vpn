#!/bin/bash

if [ -z "$O" ]; then 
    O=vpn
fi

if [ -z "$CN" ]; then 
    CN=$HOST_IP
fi

cd /data/key_files
if [ "`ls -A`" = "" ]; then
    # Create certificate
    ipsec pki --gen --outform pem > ca.pem
    ipsec pki --self --in ca.pem --dn "C=cn, O=$O, CN=$CN" --ca --lifetime 3650 --outform pem >ca.cert.pem
    ipsec pki --gen --outform pem > server.pem
    ipsec pki --gen --outform pem > client.pem
    ipsec pki --pub --in server.pem | ipsec pki --issue --lifetime 1200 --cacert ca.cert.pem --cakey ca.pem --dn "C=cn, O=$O, CN=$HOST_IP" --san="$HOST_IP" --flag serverAuth --flag ikeIntermediate --outform pem > server.cert.pem
    ipsec pki --pub --in client.pem | ipsec pki --issue --cacert ca.cert.pem --cakey ca.pem --dn "C=cn, O=$O, CN=vpn client" --outform pem > client.cert.pem

    # Copy certificate to ipsec dir
    \cp ca.cert.pem /usr/local/etc/ipsec.d/cacerts/
    \cp server.cert.pem /usr/local/etc/ipsec.d/certs/
    \cp server.pem /usr/local/etc/ipsec.d/private/
    \cp client.cert.pem /usr/local/etc/ipsec.d/certs/
    \cp client.pem  /usr/local/etc/ipsec.d/private/

    # View the certificate contents and save file
    echo "Below the horizontal line is the content of the certificate. Copy the content to a file in the .cert suffix format. Such as: vpn.cert"
    echo "______________________________________________________________"
    cat /data/key_files/ca.cert.pem
else
    echo "/data/key_files dir is not empty, using provided certificate"
    \ln -s -f /data/key_files/ca.cer /usr/local/etc/ipsec.d/cacerts/ca.cert.pem
    \ln -s -f /data/key_files/fullchain.cer /usr/local/etc/ipsec.d/certs/server.cert.pem
    \ln -s -f /data/key_files/*.key /usr/local/etc/ipsec.d/private/server.pem
fi

if [ -n "$VPNUSER" ] && [ -n "$VPNPASS" ] && [ `cat /usr/local/etc/ipsec.secrets | grep -c "$VPNUSER %any"` -eq 0 ]; then 
    # Custom connection VPN username password
    sed -i "$ a $VPNUSER %any : EAP \"$VPNPASS\""  /usr/local/etc/ipsec.secrets
fi

# Reboot ipsec vpn loading cert
if [ "$1" != "skip" ];then
    supervisorctl restart ipsec
fi
